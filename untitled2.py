# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hNsaCuMvzUKuFSl5tMLsUrsF1QUgcPH6
"""

fl = open('pyth01.txt','w')
fl.write('Hey I am bek, I am teaching file handling')
fl.close()

fl = open('pyth01.txt','r')
ab = fl.read()
print(ab)
fl.close()

fl = open('pyth01.txt','a')
fl.writer('\nkamali bek is also in the class')
fl.close()

fl = open('pyth01.txt','r')
ab = fl.read()
print=(ab)
fl.close()

# Building Candy Crush using Python (only logic of the game not UI)

import random


def create_board(size):
    board = []
    for i in range(size):
        board.append([])
        for j in range(size):
            board[i].append(random.randint(1, 4))
    return board


def print_board(board):
    for i in range(len(board)):
        for j in range(len(board[i])):
            print(board[i][j], end=" ")
        print()


def check_horizontal(board):
    for i in range(len(board)):
        for j in range(len(board[i]) - 2):
            if board[i][j] == board[i][j + 1] == board[i][j + 2]:
                return True
    return False


def check_vertical(board):
    for i in range(len(board) - 2):
        for j in range(len(board[i])):
            if board[i][j] == board[i + 1][j] == board[i + 2][j]:
                return True
    return False


def check_board(board):
    return check_horizontal(board) or check_vertical(board)


def main():
    size = int(input("Enter the size of the board: "))
    board = create_board(size)
    print_board(board)
    if check_board(board):
        print("There are 3 consecutive numbers in a row or column")
    else:
        print("There are no 3 consecutive numbers in a row or column")


main()

# 1. We need to find python library for english words
 # 2. Select one random word from the dictonary
 # 3. Remove certain charcters from the word
 # 4. Show the meaning of the word as a hint
 # 5. if done without any mistakes then add points to it
 # 6. if done 3 mistakes then say good bye and show final score

import random
import json

with open("data.json") as f:
    data = json.load(f)


def get_random_word():
    word = random.choice(list(data.keys())) # this is a bug, please fix it
    return word.upper()


def play(word):
    word_completion = "_" * len(word)
    guessed = False
    guessed_letters = []
    guessed_words = []
    tries = 6
    print("Let's play Hangman!")
    print(display_hangman(tries))
    print(word_completion)
    print("\n")
    while not guessed and tries > 0:
        guess = input("Please guess a letter or word: ").upper()
        if len(guess) == 1 and guess.isalpha():
            if guess in guessed_letters:
                print("You already guessed the letter", guess)
            elif guess not in word:
                print(guess, "is not in the word.")
                tries -= 1
                guessed_letters.append(guess)
            else:
                print("Good job,", guess, "is in the word!")
                guessed_letters.append(guess)
                word_as_list = list(word_completion)
                indices = [i for i, letter in enumerate(word) if letter == guess]
                for index in indices:
                    word_as_list[index] = guess
                word_completion = "".join(word_as_list)
                if "_" not in word_completion:
                    guessed = True
        elif len(guess) == len(word) and guess.isalpha():
            if guess in guessed_words:
                print("You already guessed the word", guess)
            elif guess != word:
                print(guess, "is not the word.")
                tries -= 1
                guessed_words.append(guess)
            else:
                guessed = True
                word_completion = word
        else:
            print("Not a valid guess.")
        print(display_hangman(tries))
        print(word_completion)
        print("\n")
    if guessed:
        print("Congrats, you guessed the word! You win!")
    else:
        print("Sorry, you ran out of tries. The word was " + word + ". Maybe next time!")


def display_hangman(tries):
    stages = [  # final state: head, torso, both arms, and both legs
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                """,
                # head, torso, both arms, and one leg
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                """,
                # head, torso, and both arms
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                """,
                # head, torso, and one arm
                """
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                """,
                # head and torso
                """
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                """,
                # head
                """
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                """,
                # initial empty state
                """
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                """
    ]
    return stages[tries]


def main():
    word = get_random_word()
    play(word)
    while input("Play Again? (Y/N) ").upper() == "Y":
        word = get_random_word()
        play(word)


if __name__ == "__main__":
    main()